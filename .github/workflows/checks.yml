name: Checks

on:
  push:
    branches: [main]
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  rust-rustfmt:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Rust
        uses: actions-rust-lang/setup-rust-toolchain@v1

      - name: Check formatting
        run: cargo fmt -- --check

  rust-clippy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
 
      - name: Setup Rust
        uses: actions-rust-lang/setup-rust-toolchain@v1

      - name: Run clippy
        run: cargo clippy --all-targets -- -D warnings

  python-lints:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Rust
        uses: actions-rust-lang/setup-rust-toolchain@v1
      
      - name: Setup UV Python package manager
        uses: astral-sh/setup-uv@v6
        with:
          enable-cache: true
          python-version: "3.13"
      
      - name: Install the project
        run: uv sync --locked --all-extras --dev
      
      - name: Run ruff format to check for formatting issues
        run: uv run ruff format --check --diff

      - name: Run ruff check to check for linting issues
        run: uv run ruff check


  python-tests:
    name: Run Python ${{ matrix.version }} tests on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        version: ["3.12", "3.13"]
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Setup Rust
      uses: actions-rust-lang/setup-rust-toolchain@v1
    
    - name: Setup UV Python package manager
      uses: astral-sh/setup-uv@v6
      with:
        enable-cache: true
        python-version: ${{ matrix.version }}
  
    - name: Install the project
      run: uv sync --locked --all-extras --dev

    - name: Run pytest tests
      run: uv run pytest
