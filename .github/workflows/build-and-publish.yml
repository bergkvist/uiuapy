name: Build and Publish to PyPI

on:
  push:
    tags: ['v*']

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        python-version: ["3.13"]
  
    name: Build wheels for Python ${{ matrix.python-version }} on ${{ matrix.os }} and publishes to PyPI
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Rust
        uses: actions-rust-lang/setup-rust-toolchain@v1

      - name: Setup UV Python package manager
        uses: astral-sh/setup-uv@v6
        with:
          enable-cache: true
          python-version: ${{ matrix.python-version }}

      - name: Install the project
        run: uv sync --locked --all-extras --dev

      - name: Set version based on tag
        run: uv version ${{github.ref_name}}

      - name: Build wheel
        env:
          CARGO_TARGET_DIR: ${{ github.workspace }}/target
        run: uv build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist-${{ runner.os }}-${{ matrix.python-version }}
          path: dist/*

  publish:
    name: Publish to PyPI
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Setup UV Python package manager
        uses: astral-sh/setup-uv@v6

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: dist-*
          merge-multiple: true
          path: dist
      
      - name: Publish to PyPI
        env:
          UV_PUBLISH_TOKEN: ${{ secrets.UV_PUBLISH_TOKEN }}
        run: uv publish dist/*

      