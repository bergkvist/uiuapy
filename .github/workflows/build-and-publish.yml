name: Build and Publish to PyPI

on:
  push:
    tags: ['v*']

jobs:
  build-manylinux_2_28_x86_64:
    name: Build Python wheels on manylinux_2_28_x86_64
    runs-on: ubuntu-latest
    container: quay.io/pypa/manylinux_2_28_x86_64:2025.08.15-1
    steps:
      - name: Setup Rust
        uses: actions-rust-lang/setup-rust-toolchain@v1

      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set version based on tag
        run: uv version ${{ github.ref_name }} --no-sync

      - name: Build wheels
        env:
          CARGO_TARGET_DIR: ${{ github.workspace }}/target
        run: |
          uv build --python 3.9
          uv build --python 3.10
          uv build --python 3.11
          uv build --python 3.12
          uv build --python 3.13

      - name: Auditwheel repair
        run: |
          auditwheel repair dist/*.whl
          rm -rf dist/*.whl
          mv wheelhouse/*.whl dist/
          rm -rf wheelhouse

      - name: List dist files
        run: ls -alh dist

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist-${{ github.ref_name }}-${{ runner.os }}
          path: dist/*

  build-macos:
    name: Build Python wheels on macOS
    runs-on: macos-latest
    steps:
      - name: Setup Rust
        uses: actions-rust-lang/setup-rust-toolchain@v1

      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup UV Python package manager
        uses: astral-sh/setup-uv@v6
        with:
          enable-cache: true

      - name: Set version based on tag
        run: uv version ${{ github.ref_name }} --no-sync

      - name: Build wheels
        env:
          CARGO_TARGET_DIR: ${{ github.workspace }}/target
        run: |
          uv build --python 3.9
          uv build --python 3.10
          uv build --python 3.11
          uv build --python 3.12
          uv build --python 3.13

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist-${{ github.ref_name }}-${{ runner.os }}
          path: dist/*

  build-windows:
    name: Build Python wheels on Windows
    runs-on: windows-latest
    steps:
      - name: Setup Rust
        uses: actions-rust-lang/setup-rust-toolchain@v1

      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup UV Python package manager
        uses: astral-sh/setup-uv@v6
        with:
          enable-cache: true

      - name: Set version based on tag
        run: uv version ${{ github.ref_name }} --no-sync

      - name: Build wheels
        env:
          CARGO_TARGET_DIR: ${{ github.workspace }}/target
        run: |
          uv build --python 3.9
          uv build --python 3.10
          uv build --python 3.11
          uv build --python 3.12
          uv build --python 3.13

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist-${{ github.ref_name }}-${{ runner.os }}
          path: dist/*

  publish:
    name: Publish to PyPI
    needs: [build-manylinux_2_28_x86_64, build-macos, build-windows]
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/uiuapy/
    permissions:
      id-token: write
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: dist-${{ github.ref_name }}-*
          merge-multiple: true
          path: dist
      
      - name: List dist files
        run: ls -alh dist

      - name: Publish distribution ðŸ“¦ to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
